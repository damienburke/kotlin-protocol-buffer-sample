plugins {
    id 'org.jetbrains.kotlin.jvm' version '1.8.0'
    id 'com.google.protobuf' version '0.9.2'
    id 'application'
}

repositories {
    // Use Maven Central for resolving dependencies.
    mavenCentral()
}

ext {
    grpcVersion = "1.54.0"
    grpcKotlinVersion = "1.3.0"
    protobufVersion = "3.22.2"
    annotationApiVersion = "6.0.53"
}

dependencies {

    testImplementation "org.jetbrains.kotlin:kotlin-test"
    implementation "org.jetbrains.kotlin:kotlin-stdlib"
    implementation("io.grpc:grpc-kotlin-stub:$grpcKotlinVersion")
    implementation("io.grpc:grpc-protobuf:$grpcVersion")
    implementation("com.google.protobuf:protobuf-kotlin:$protobufVersion")
    runtimeOnly("io.grpc:grpc-netty-shaded:$grpcVersion")

    if (JavaVersion.current().isJava9Compatible()) {
        compileOnly "org.apache.tomcat:annotations-api:$annotationApiVersion" // necessary for Java 9+
    }

    testImplementation 'org.jetbrains.kotlin:kotlin-test-junit5'
    testImplementation libs.junit.jupiter.engine
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'

    implementation libs.guava
}

protobuf {
    protoc {
        artifact = "com.google.protobuf:protoc:$protobufVersion"
    }

    plugins {
        grpc {
            artifact = "io.grpc:protoc-gen-grpc-java:$grpcVersion"
        }
        grpckt {
            artifact = "io.grpc:protoc-gen-grpc-kotlin:$grpcKotlinVersion:jdk8@jar"
        }
    }

    generateProtoTasks {
        all().each { task ->
            task.plugins {
                grpc {}
                grpckt {}
            }
            task.builtins {
                kotlin {}
            }
        }
    }
}

kotlin {
    jvmToolchain {
        languageVersion.set(JavaLanguageVersion.of(17)) // Depends on your JDK version
    }
}

application {
    // Define the main class for the application.
    mainClass = 'org.example.AppKt'
}

tasks.named('test') {
    // Use JUnit Platform for unit tests.
    useJUnitPlatform()
}
